{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Pallete.svelte",
    "Part.svelte",
    "PartList.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let colors;\n</script>\n\n<style>\n  .pallete {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .color {\n    display: flex;\n    align-items: center;\n    margin: -3px -3px;\n    padding: 3px;\n    border: 1px solid transparent;\n  }\n\n  .color:hover {\n    background-color: white;\n    border-color: black;\n    z-index: 1;\n  }\n\n  .color:hover > .label {\n    width: initial;\n  }\n\n  .label {\n    width: 0;\n    line-height: 15px;\n    overflow: hidden;\n  }\n\n  .square {\n    width: 15px;\n    height: 15px;\n    border: 1px solid black;\n    box-sizing: border-box;\n  }\n</style>\n\n<div class=\"pallete\">\n  {#each colors as color}\n    <div class=\"color\">\n      <div class=\"square\" style=\"background-color: #{color.rgb}\" title={color.name}></div>\n      <div class=\"label\">&nbsp;×&nbsp;{color.quantity}</div>\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import Pallete from './Pallete.svelte'\n\n  export let imageUrl, quantity, name, colors;\n</script>\n\n<style>\n  .part {\n    position: relative;\n    width: 120px;\n    height: 120px;\n    padding: 10px;\n    margin: 10px;\n  }\n\n  .quantity {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n</style>\n\n<div class=\"part\">\n  <img\n    src={imageUrl}\n    alt={name}\n    title={name}\n    loading=\"lazy\"\n    referrerpolicy=\"no-referrer\" />\n  <Pallete colors={colors}/>\n  <div class=\"quantity\">&nbsp;×&nbsp;{quantity}</div>\n</div>\n",
    "<script>\n  import { apiKey, userToken } from \"./stores/credentials\";\n  import { parts, sortedParts, loadingProgress } from \"./stores/parts\";\n  import Part from \"./Part.svelte\";\n  import { getAllParts } from \"./rebrickable\";\n\n  function onProgress(count, total) {\n    loadingProgress.set(Math.round((count / total) * 100));\n  }\n\n  function loadParts() {\n    loadingProgress.set(0);\n    getAllParts($apiKey, $userToken, onProgress).then((result) => {\n      parts.set(result);\n      loadingProgress.set(null);\n    });\n  }\n\n  let uniqueParts, totalParts\n\n  $: if ($sortedParts) {\n    uniqueParts = $sortedParts.length\n    totalParts = $sortedParts.reduce((sum, {quantity}) => sum + quantity, 0)\n  }\n</script>\n\n<style>\n  .parts {\n    display: flex;\n    flex-wrap: wrap;\n  }\n</style>\n\n{#if $sortedParts}\n  <p>{uniqueParts} kinds, {totalParts} total</p>\n  <div class=\"parts\">\n    {#each $sortedParts as { colors, part, quantity } (part.part_num)}\n      <Part name={part.name} imageUrl={part.part_img_url} {quantity} {colors} />\n    {/each}\n  </div>\n{:else}\n  <button on:click={loadParts}>\n    Load parts {#if $loadingProgress}({$loadingProgress}%){/if}\n  </button>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAKE,QAAQ,4BAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,AAC/B,CAAC,AAED,kCAAM,MAAM,AAAC,CAAC,AACZ,gBAAgB,CAAE,KAAK,CACvB,YAAY,CAAE,KAAK,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,oBAAM,MAAM,CAAG,MAAM,cAAC,CAAC,AACrB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,CAAC,CACR,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,UAAU,CAAE,UAAU,AACxB,CAAC;ACnCD,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,AACd,CAAC,AAED,SAAS,eAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,AACX,CAAC,AAED,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,AACrB,CAAC;ACED,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC"
}